server:
  port: 8089

spring:
  rabbitmq:
    host: 192.168.245.129 # rabbitMQ的ip地址
    port: 5672 # 端口
    username: itcast
    password: 123321
    virtual-host: /
    listener:
      simple:
        prefetch: 1 #每次只能获取一条消息，处理完成后才能获取下一条消息
      direct:
        acknowledge-mode: auto
        retry:
          enabled: true #开启失败重试
          initial-interval: 1000 #失败等待市场
          multiplier: 1 #下次时间倍数
          max-attempts: 3
          stateless: false #有事务 改成false
  datasource:
    name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/service-order?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: 20000113a@
  application:
    name: service-order
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
  redis:
    port: 6379
    host: 127.0.0.1
    database: 0
seata:
  registry: # TC服务注册中心的配置，微服务根据这些信息去注册中心获取tc服务地址
    # 参考tc服务自己的registry.conf中的配置
    type: nacos
    nacos: # tc
      server-addr: 127.0.0.1:8848
      namespace: ""
      group: DEFAULT_GROUP
      application: seata-tc-server # tc服务在nacos中的服务名称
      username: nacos
      password: nacos
  tx-service-group: seata-demo # 事务组，根据这个获取tc服务的cluster名称
  service:
    vgroup-mapping: # 事务组与TC服务cluster的映射关系
      seata-demo: SH
  data-source-proxy-mode: XA